{"version":3,"sources":["webpack.config.js"],"names":["HtmlWebpackPlugin","require","WebpackPwaManifest","InjectManifest","module","path","mode","main","install","database","entry","editor","resolve","__dirname","plugins","filename","title","swSrc","fingerprints","inject","name","short_name","description","background_color","theme_color","start_url","publicPath","icons","src","sizes","destination","join","exclude","use","loader","options","presets","test"],"mappings":"aAAA,IAAMA,kBAAoBC,QAAQ,uBAC5BC,mBAAqBD,QAAQ,wBAD7BD,KAAAA,QAAiB,iBAGIC,QAAQ,0BAA3BE,wBAAAA,eADRC,OAAMC,QAAOJ,WAKX,MAAO,CACLK,KAAM,cALFH,MAAAA,CAOFI,KAAM,oBAJNC,QAAN,sBACEC,SAAO,uBACLH,OAAM,qBACNI,OAAO,sBAELF,OAAAA,CACAC,SAAU,mBACVE,KAAMN,KAAEO,QAAAC,UAJH,SAAAC,QAFF,CAUHC,IAAAA,kBAAU,CACVV,SAAWO,eAXRI,MAAA,2BAiBDA,IAAAA,eAAO,CAGTC,MAAId,cACFc,OAAO,cAKPC,IAAAA,mBADqB,CAErBC,cAFqB,EAGrBC,QAAM,EACNC,KAAAA,qBACAC,WAAa,OACbC,YAAAA,sBACAC,iBAAa,UACbC,YARqB,UASrBC,UAAY,IACZC,WACE,IACEC,MAAKvB,CACLwB,CACAC,IAAAA,KAAazB,QAAA,uBAJVwB,MAAA,CAAA,GAAA,IAAA,IAAA,IAAA,IAAA,KAnCNC,YAAAzB,KAAA0B,KAAA,SAAA,cAsDCC,OAAAA,CACAC,MAAK,CACHC,CACAC,KAAAA,UACEC,IAAAA,CAAAA,eAAU,eADH,CAFNC,KAAA,UARFL,QAAA,eADDC,IAAA,CA9CVC,OAAA,eADFC,QAAA,CA2DcC,QAAS,CAAC,qBACVtB,QAAS,CAAC,4CAA6C","file":"webpack.config.min.js","sourcesContent":["const HtmlWebpackPlugin = require('html-webpack-plugin');\r\nconst WebpackPwaManifest = require('webpack-pwa-manifest');\r\nconst path = require('path');\r\nconst { InjectManifest } = require('workbox-webpack-plugin');\r\n\r\n\r\nmodule.exports = () => {\r\n  return {\r\n    mode: 'development',\r\n    entry: {\r\n      main: './src/js/index.js',\r\n      install: './src/js/install.js',\r\n      database: './src/js/database.js',\r\n      editor: './src/js/editor.js',\r\n      header: './src/js/header.js',\r\n    },\r\n    output: {\r\n      filename: '[name].bundle.js',\r\n      path: path.resolve(__dirname, 'dist'),\r\n    },\r\n    plugins: [\r\n      \r\n      new HtmlWebpackPlugin({\r\n        template: './index.html',\r\n        title: 'hamster webpack plugin'\r\n      }),\r\n      \r\n      new InjectManifest({\r\n        swSrc: './src-sw.js',\r\n        swDest: 'src-sw.js',\r\n      }),\r\n    \r\n      new WebpackPwaManifest({\r\n        fingerprints: false,\r\n        inject: true,\r\n        name: 'HAMSTER IS FOREVER',\r\n        short_name: 'HAMS',\r\n        description: 'Hamster Text Editor',\r\n        background_color: '#225ca3',\r\n        theme_color: '#225ca3',\r\n        start_url: '/',\r\n        publicPath: '/',\r\n        icons: [\r\n          {\r\n            src: path.resolve('src/images/logo.png'),\r\n            sizes: [96, 128, 192, 256, 384, 512],\r\n            destination: path.join('assets', 'icons'),\r\n          },\r\n        ],\r\n      }),\r\n\r\n    ],\r\n\r\n    module: {\r\n      rules: [\r\n        {\r\n          test: /\\.css$/i,\r\n          use: ['style-loader', 'css-loader'],\r\n        },\r\n        {\r\n          test: /\\.m?js$/,\r\n          exclude: /node_modules/,\r\n          use: {\r\n            loader: 'babel-loader',\r\n            options: {\r\n              presets: ['@babel/preset-env'],\r\n              plugins: ['@babel/plugin-proposal-object-rest-spread', '@babel/transform-runtime'],\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n};"]}